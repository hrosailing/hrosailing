%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 4 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
5 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://numpy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 669.0236 115.7029 681.0236 ] /Subtype /Link /Type /Annot
>>
endobj
6 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 651.0236 128.4829 663.0236 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://pypi.org/project/pynmea2/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 633.0236 126.8229 645.0236 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://www.scipy.org/)
>> /Border [ 0 0 0 ] /Rect [ 85.69291 615.0236 108.4729 627.0236 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Annots [ 5 0 R 6 0 R 7 0 R 8 0 R ] /Contents 74 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
10 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://jieter.github.io/orc-data/site/)
>> /Border [ 0 0 0 ] /Rect [ 268.2929 176.8661 290.5129 188.8661 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://opencpn.org/OpenCPN/plugins/polar.html)
>> /Border [ 0 0 0 ] /Rect [ 319.5229 164.8661 421.7829 176.8661 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Annots [ 10 0 R 11 0 R ] /Contents 75 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
13 0 obj
<<
/Contents 76 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
14 0 obj
<<
/Contents 77 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
15 0 obj
<<
/Contents 78 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
16 0 obj
<<
/Contents 79 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
17 0 obj
<<
/Contents 80 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
18 0 obj
<<
/Contents 81 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
19 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 477.0236 219.9229 489.0236 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 477.0236 259.9429 489.0236 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Annots [ 19 0 R 20 0 R ] /Contents 82 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
22 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 189.5328 226.8661 216.2028 238.8661 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 238.4428 226.8661 256.2228 238.8661 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Annots [ 22 0 R 23 0 R ] /Contents 83 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
25 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 405.0129 124.8661 431.6829 136.8661 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 453.9229 124.8661 471.7029 136.8661 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Annots [ 25 0 R 26 0 R ] /Contents 84 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
28 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 401.2928 527.0236 427.9628 539.0236 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 450.2028 527.0236 467.9828 539.0236 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Annots [ 28 0 R 29 0 R ] /Contents 85 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
31 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 525.0236 219.9229 537.0236 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 525.0236 259.9429 537.0236 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Annots [ 31 0 R 32 0 R ] /Contents 86 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
34 0 obj
<<
/Contents 87 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
35 0 obj
<<
/Contents 88 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
36 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 189.5328 729.0236 216.2028 741.0236 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 238.4428 729.0236 256.2228 741.0236 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Annots [ 36 0 R 37 0 R ] /Contents 89 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
39 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 465.0236 219.9229 477.0236 ] /Subtype /Link /Type /Annot
>>
endobj
40 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 465.0236 259.9429 477.0236 ] /Subtype /Link /Type /Annot
>>
endobj
41 0 obj
<<
/Annots [ 39 0 R 40 0 R ] /Contents 90 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
42 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 377.2928 230.0236 403.9628 242.0236 ] /Subtype /Link /Type /Annot
>>
endobj
43 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 426.2028 230.0236 443.9828 242.0236 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Annots [ 42 0 R 43 0 R ] /Contents 91 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
45 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 401.2928 459.0236 427.9628 471.0236 ] /Subtype /Link /Type /Annot
>>
endobj
46 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 450.2028 459.0236 467.9828 471.0236 ] /Subtype /Link /Type /Annot
>>
endobj
47 0 obj
<<
/Annots [ 45 0 R 46 0 R ] /Contents 92 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
48 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 465.0236 219.9229 477.0236 ] /Subtype /Link /Type /Annot
>>
endobj
49 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 465.0236 259.9429 477.0236 ] /Subtype /Link /Type /Annot
>>
endobj
50 0 obj
<<
/Annots [ 48 0 R 49 0 R ] /Contents 93 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
51 0 obj
<<
/Contents 94 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
52 0 obj
<<
/Contents 95 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
53 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 501.0236 219.9229 513.0236 ] /Subtype /Link /Type /Annot
>>
endobj
54 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 501.0236 259.9429 513.0236 ] /Subtype /Link /Type /Annot
>>
endobj
55 0 obj
<<
/Annots [ 53 0 R 54 0 R ] /Contents 96 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
56 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 162.5328 226.8661 189.2028 238.8661 ] /Subtype /Link /Type /Annot
>>
endobj
57 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 211.4428 226.8661 229.2228 238.8661 ] /Subtype /Link /Type /Annot
>>
endobj
58 0 obj
<<
/Annots [ 56 0 R 57 0 R ] /Contents 97 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
59 0 obj
<<
/Contents 98 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
60 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 374.2928 527.0236 400.9628 539.0236 ] /Subtype /Link /Type /Annot
>>
endobj
61 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 423.2028 527.0236 440.9828 539.0236 ] /Subtype /Link /Type /Annot
>>
endobj
62 0 obj
<<
/Annots [ 60 0 R 61 0 R ] /Contents 99 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
63 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/gallery/color/named_colors.html)
>> /Border [ 0 0 0 ] /Rect [ 193.2529 489.0236 219.9229 501.0236 ] /Subtype /Link /Type /Annot
>>
endobj
64 0 obj
<<
/A <<
/S /URI /Type /Action /URI (https://matplotlib.org/stable/tutorials/colors/colors.html)
>> /Border [ 0 0 0 ] /Rect [ 242.1629 489.0236 259.9429 501.0236 ] /Subtype /Link /Type /Annot
>>
endobj
65 0 obj
<<
/Annots [ 63 0 R 64 0 R ] /Contents 100 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
66 0 obj
<<
/Contents 101 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 73 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
67 0 obj
<<
/Outlines 69 0 R /PageLabels 102 0 R /PageMode /UseNone /Pages 73 0 R /Type /Catalog
>>
endobj
68 0 obj
<<
/Author () /CreationDate (D:20210716124411+00'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20210716124411+00'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title (hrosailing-Module Documentation) /Trapped /False
>>
endobj
69 0 obj
<<
/Count 3 /First 70 0 R /Last 72 0 R /Type /Outlines
>>
endobj
70 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 729.0236 0 ] /Next 71 0 R /Parent 69 0 R /Title (Dependencies)
>>
endobj
71 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 606.0236 0 ] /Next 72 0 R /Parent 69 0 R /Prev 70 0 R /Title (How To Use This Module)
>>
endobj
72 0 obj
<<
/Dest [ 9 0 R /XYZ 62.69291 474.6236 0 ] /Parent 69 0 R /Prev 71 0 R /Title (Contents Of This Module)
>>
endobj
73 0 obj
<<
/Count 28 /Kids [ 9 0 R 12 0 R 13 0 R 14 0 R 15 0 R 16 0 R 17 0 R 18 0 R 21 0 R 24 0 R 
  27 0 R 30 0 R 33 0 R 34 0 R 35 0 R 38 0 R 41 0 R 44 0 R 47 0 R 50 0 R 
  51 0 R 52 0 R 55 0 R 58 0 R 59 0 R 62 0 R 65 0 R 66 0 R ] /Type /Pages
>>
endobj
74 0 obj
<<
/Length 7652
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
BT 1 0 0 1 0 4 Tm 61.05488 0 Td 24 TL /F2 20 Tf 0 0 0 rg (hrosailing) Tj /F3 20 Tf (-Module Documentation) Tj T* -61.05488 0 Td ET
Q
Q
q
1 0 0 1 62.69291 708.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 690.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module has the following third-party dependencies) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 684.0236 cm
Q
q
1 0 0 1 62.69291 672.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (numpy) Tj  T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 666.0236 cm
Q
q
1 0 0 1 62.69291 654.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (matplotlib) Tj  T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 648.0236 cm
Q
q
1 0 0 1 62.69291 636.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (pynmea2) Tj  T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 630.0236 cm
Q
q
1 0 0 1 62.69291 618.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (scipy) Tj  T* ET
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 618.0236 cm
Q
q
1 0 0 1 62.69291 585.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (How To Use This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 567.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (After installing/downloading one can easily use the ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module via) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 561.0236 cm
Q
q
1 0 0 1 62.69291 535.8236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( import hrosailing) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 535.8236 cm
Q
q
1 0 0 1 62.69291 517.8236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (or) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 511.8236 cm
Q
q
1 0 0 1 62.69291 486.6236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
q
1 0 0 1 0 0 cm
q
1 0 0 1 6.6 6.6 cm
q
.662745 .662745 .662745 RG
.5 w
.960784 .960784 .862745 rg
n -6 -6 448.6898 24 re B*
Q
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (>) Tj (>) Tj (>) Tj ( from hrosailing import ...) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 62.69291 486.6236 cm
Q
q
1 0 0 1 62.69291 453.6236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F3 17.5 Tf 0 0 0 rg (Contents Of This Module) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 435.6236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module defines the following public functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 429.6236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 346.7575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (apparent_wind_to_true) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 340.7575 cm
Q
q
1 0 0 1 20 110.7575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 224 cm
Q
q
1 0 0 1 20 212 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Converts apparent wind to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 212 cm
Q
q
1 0 0 1 20 196 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 133 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 50 Tm  T* ET
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_arr) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind data given as a sequence of points consisting of wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle and boat speed, where the wind speed and wind angle) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (are measured as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape \(n, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Array containt the same data as ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( but with the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed and wind angle now measured as apparent wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises a ValueError) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( is empty) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if same values in ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( are ) Tj /F2 10 Tf (NaN) Tj /F1 10 Tf ( or not finite) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( can't be broadcasted to an array of shape \(n, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 110.7575 cm
Q
q
1 0 0 1 20 92.75748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (hrosailing) Tj /F1 10 Tf (.) Tj /F3 10 Tf (true_wind_to_apparent) Tj /F1 10 Tf (\() Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 86.75748 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 80.75748 cm
Q
q
1 0 0 1 20 68.75748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Converts true wind to apparent wind) Tj T* ET
Q
Q
q
1 0 0 1 20 68.75748 cm
Q
q
1 0 0 1 20 52.75748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 39.75748 Tm  T* ET
q
1 0 0 1 20 37.75748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wind_arr) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj T* ET
Q
Q
q
1 0 0 1 20 31.75748 cm
Q
q
1 0 0 1 20 1.75748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind data given as a sequence of points consisting of wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle and boat speed, where the wind speed and wind angle) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
75 0 obj
<<
/Length 8606
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 617.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 133 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (are measured as apparent wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 117 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape \(n, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Array containt the same data as ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( but with the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed and wind angle now measured as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises a ValueError) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( is empty) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if same values in ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( are ) Tj /F2 10 Tf (NaN) Tj /F1 10 Tf ( or not finite) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (wind_arr) Tj /F1 10 Tf ( can't be broadcasted to an array of shape \(n, 3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 617.0236 cm
Q
q
1 0 0 1 62.69291 599.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing) Tj /F1 10 Tf (-module has the following public submodules:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 593.0236 cm
Q
q
1 0 0 1 62.69291 557.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (hrosailing.polardiagram) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (hrosailing.processing) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 557.0236 cm
Q
q
1 0 0 1 62.69291 539.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (hrosailing.polardiagram) Tj /F1 10 Tf (-module defines the following public functions:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 533.0236 cm
Q
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 450 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 444 cm
Q
q
1 0 0 1 20 287 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 151 cm
Q
q
1 0 0 1 20 139 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the ) Tj /F2 10 Tf (.to_csv) Tj /F1 10 Tf ( method of the ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance.) Tj T* ET
Q
Q
q
1 0 0 1 20 139 cm
Q
q
1 0 0 1 20 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv-file is located or where a new .csv-file will) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (written to the .csv-file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileWritingException) Tj /F1 10 Tf ( if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 287 cm
Q
q
1 0 0 1 20 269 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (from_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (csv_path,) Tj ( ) Tj (fmt='hro',) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 263 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 257 cm
Q
q
1 0 0 1 20 245 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Reads a .csv file and returns the ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 233 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (contained in it) Tj T* ET
Q
Q
q
1 0 0 1 20 233 cm
Q
q
1 0 0 1 20 217 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 16 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 188 Tm  T* ET
q
1 0 0 1 20 186 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to a .csv file which will be read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (fmt) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 60 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The "format" of the .csv file. Currently supported formats are:) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ("hro") Tj /F1 10 Tf (: format created by the ) Tj /F2 10 Tf (polardiagram.to_csv) Tj /F1 10 Tf ( function) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ("orc") Tj /F1 10 Tf (: format found at ) Tj 0 0 .501961 rg (ORC) Tj  T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ("opencpn") Tj /F1 10 Tf (: format created by the ) Tj 0 0 .501961 rg (OpenCPN Polar Plugin) Tj  T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg ("array") Tj /F1 10 Tf (:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if wind data in file should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
76 0 obj
<<
/Length 7999
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 121.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 539 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instances contained in the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileReadingException) Tj /F1 10 Tf ( if) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- an unknown format was specified) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- the file can't be found, opened or read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 539 cm
Q
q
1 0 0 1 20 521 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path,) Tj ( ) Tj (obj) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 515 cm
Q
q
1 0 0 1 20 358 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 151 cm
Q
q
1 0 0 1 20 139 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the ) Tj /F2 10 Tf (.pickling) Tj /F1 10 Tf ( method of the ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 139 cm
Q
q
1 0 0 1 20 123 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 54 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .pkl file is located or where a new .pkl file will) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (written to the .csv-file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileWritingException) Tj /F1 10 Tf ( if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 358 cm
Q
q
1 0 0 1 20 340 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (depickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 334 cm
Q
q
1 0 0 1 20 164 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 164 cm
Q
q
1 0 0 1 20 152 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Reads a .pkl file and returns the ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 140 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (contained in it) Tj T* ET
Q
Q
q
1 0 0 1 20 140 cm
Q
q
1 0 0 1 20 124 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 85 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path to a .pkl file which will be read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance contained in the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.pkl file) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileReadingException) Tj /F1 10 Tf ( if file can't be found, opened, or read) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 164 cm
Q
q
1 0 0 1 20 146 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetric_polar_diagram) Tj /F1 10 Tf (\(obj\)) Tj T* ET
Q
Q
q
1 0 0 1 20 140 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 134 cm
Q
q
1 0 0 1 20 122 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Calls the symmetrize-method of the ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance) Tj T* ET
Q
Q
q
1 0 0 1 20 122 cm
Q
q
1 0 0 1 20 106 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 55 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (obj) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram.PolarDiagram) Tj /F1 10 Tf ( instance which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (symmetrized) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 39 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 26 Tm  T* ET
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagram) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg ("symmetrized" version of ) Tj /F2 10 Tf (obj) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 121.0236 cm
Q
q
1 0 0 1 62.69291 103.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (The ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf (-module defines the following public classes:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 97.02362 cm
Q
q
1 0 0 1 62.69291 79.02362 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagram) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
 
endstream
endobj
77 0 obj
<<
/Length 8097
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 676.1575 cm
Q
q
1 0 0 1 20 664.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (An abstract base class for the ) Tj /F2 10 Tf (polardiagram) Tj /F1 10 Tf ( classes) Tj T* ET
Q
Q
q
1 0 0 1 20 664.1575 cm
Q
q
1 0 0 1 20 648.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 635.1575 Tm  T* ET
q
1 0 0 1 20 633.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (pickling) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (pkl_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 627.1575 cm
Q
q
1 0 0 1 20 524.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 97 cm
Q
q
1 0 0 1 20 85 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Writes ) Tj /F2 10 Tf (self) Tj /F1 10 Tf ( to a .pkl file) Tj T* ET
Q
Q
q
1 0 0 1 20 85 cm
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pkl_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .pkl file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.pkl file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileWritingException) Tj /F1 10 Tf ( if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 524.1575 cm
Q
q
1 0 0 1 20 506.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_polar_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 500.1575 cm
Q
q
1 0 0 1 20 25.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 469 cm
Q
q
1 0 0 1 20 457 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 457 cm
Q
q
1 0 0 1 20 441 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 350 Tm  T* ET
q
1 0 0 1 20 348 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 342 cm
Q
q
1 0 0 1 20 138 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram, given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- an element of ) Tj /F2 10 Tf (self.wind_speeds) Tj /F1 10 Tf ( for) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice then equals the corresponding) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (column of ) Tj /F2 10 Tf (self.boat_speeds) Tj /F1 10 Tf ( together) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the wind angles in ) Tj /F2 10 Tf (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Same with PolarDiagramMultiSails) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- as a single wind speed for ) Tj /F2 10 Tf (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then equals ) Tj /F2 10 Tf (self\(ws,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf (, where ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (go through a fixed number of angles between) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- a single wind speed for ) Tj /F2 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then consists of all rows of ) Tj /F2 10 Tf (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the first entry being equal to ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not in ) Tj /F2 10 Tf (self.wind_speed) Tj /F1 10 Tf ( for ) Tj /F2 10 Tf (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and ) Tj /F2 10 Tf (PolarDiagramMultiSails) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- there are no rows in ) Tj /F2 10 Tf (self.points) Tj /F1 10 Tf ( with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (for ) Tj /F2 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 25.15748 cm
Q
q
1 0 0 1 20 7.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_flat_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 1.15748 cm
Q
q
1 0 0 1 20 -10.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
78 0 obj
<<
/Length 7905
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 204.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 457 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 457 cm
Q
q
1 0 0 1 20 441 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 350 Tm  T* ET
q
1 0 0 1 20 348 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 342 cm
Q
q
1 0 0 1 20 138 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram, given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- an element of ) Tj /F2 10 Tf (self.wind_speeds) Tj /F1 10 Tf ( for) Tj T* ET
Q
Q
q
1 0 0 1 20 150 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice then equals the corresponding) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (column of ) Tj /F2 10 Tf (self.boat_speeds) Tj /F1 10 Tf ( together) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the wind angles in ) Tj /F2 10 Tf (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Same with PolarDiagramMultiSails) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- as a single wind speed for ) Tj /F2 10 Tf (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then equals ) Tj /F2 10 Tf (self\(ws,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf (, where ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (go through a fixed number of angles between) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- a single wind speed for ) Tj /F2 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then consists of all rows of ) Tj /F2 10 Tf (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the first entry being equal to ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not in ) Tj /F2 10 Tf (self.wind_speed) Tj /F1 10 Tf ( for ) Tj /F2 10 Tf (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and ) Tj /F2 10 Tf (PolarDiagramMultiSails) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- there are no rows in ) Tj /F2 10 Tf (self.points) Tj /F1 10 Tf ( with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (for ) Tj /F2 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 204.1575 cm
Q
q
1 0 0 1 20 186.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull_slice) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 180.1575 cm
Q
q
1 0 0 1 20 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 177.1575 cm
Q
q
1 0 0 1 20 165.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the convex hull of a given slice of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 153.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and creates a polar plot of it) Tj T* ET
Q
Q
q
1 0 0 1 20 153.1575 cm
Q
q
1 0 0 1 20 137.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 124.1575 Tm  T* ET
q
1 0 0 1 20 122.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj T* ET
Q
Q
q
1 0 0 1 20 116.1575 cm
Q
q
1 0 0 1 20 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice of the polar diagram, given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- an element of ) Tj /F2 10 Tf (self.wind_speeds) Tj /F1 10 Tf ( for) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slice then equals the corresponding) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (column of ) Tj /F2 10 Tf (self.boat_speeds) Tj /F1 10 Tf ( together) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the wind angles in ) Tj /F2 10 Tf (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Same with ) Tj /F2 10 Tf (PolarDiagramMultiSails) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
79 0 obj
<<
/Length 8589
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 183.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 193 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 299 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 218 Tm  T* ET
q
1 0 0 1 20 138 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- as a single wind speed for ) Tj /F2 10 Tf (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then equals ) Tj /F2 10 Tf (self\(ws,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf (, where ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( will) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (go through a fixed number of angles between) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- a single wind speed for ) Tj /F2 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slice then consists of all rows of ) Tj /F2 10 Tf (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (with the first entry being equal to ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not in ) Tj /F2 10 Tf (self.wind_speeds) Tj /F1 10 Tf ( for ) Tj /F2 10 Tf (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and ) Tj /F2 10 Tf (PolarDiagramMultiSails) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- there are no rows in ) Tj /F2 10 Tf (self.points) Tj /F1 10 Tf ( with first entry ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (for ) Tj /F2 10 Tf (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 177 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Abstract Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 164 Tm  T* ET
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetrize) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_polar) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_flat) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull) Tj /F1 10 Tf (\(\)) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 183.1575 cm
Q
q
1 0 0 1 20 165.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polardiagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramTable) Tj /F1 10 Tf (\() Tj /F2 10 Tf (ws_res=None,) Tj ( ) Tj (wa_res=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 147.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bsps=None,) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 141.1575 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 133 cm
Q
q
1 0 0 1 20 121 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar diagram in form of a table) Tj T* ET
Q
Q
q
1 0 0 1 20 121 cm
Q
q
1 0 0 1 20 105 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 92 Tm  T* ET
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_res) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind speeds that will correspond to the columns of the table) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Can either be a sequence of length ) Tj /F2 10 Tf (cdim) Tj /F1 10 Tf ( or an ) Tj /F2 10 Tf (int/float) Tj /F1 10 Tf ( value) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If a number num is passed, ) Tj /F2 10 Tf (numpy.arange\(num,) Tj ( ) Tj (40,) Tj ( ) Tj (num\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be assigned to ) Tj /F2 10 Tf (ws_res) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, it will default to ) Tj /F2 10 Tf (numpy.arange\(2,) Tj ( ) Tj (42,) Tj ( ) Tj (2\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
80 0 obj
<<
/Length 7216
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 427.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 248 Tm  T* ET
q
1 0 0 1 20 246 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa_res) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 240 cm
Q
q
1 0 0 1 20 156 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind angles that will correspond to the rows of the table) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Can either be sequence of length ) Tj /F2 10 Tf (rdim) Tj /F1 10 Tf ( or an ) Tj /F2 10 Tf (int/float) Tj /F1 10 Tf ( value) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If a number num is passed, ) Tj /F2 10 Tf (numpy.arange\(num,) Tj ( ) Tj (360,) Tj ( ) Tj (num\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be assigned to ) Tj /F2 10 Tf (wa_res) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, it will default to ) Tj /F2 10 Tf (numpy.arange\(0,) Tj ( ) Tj (360,) Tj ( ) Tj (5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (bsps) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 78 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Boatspeeds that will correspond to the entries of the table) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Should be broadcastable to the shape ) Tj /F2 10 Tf (\(rdim,) Tj ( ) Tj (cdim\)) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed it will default to ) Tj /F2 10 Tf (numpy.zeros\(\(rdim,) Tj ( ) Tj (cdim\)\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if the given wind data should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (False) Tj /F1 10 Tf (, wind data will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 421.1575 cm
Q
q
1 0 0 1 20 409.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises a PolarDiagramException) Tj T* ET
Q
Q
q
1 0 0 1 20 409.1575 cm
Q
q
1 0 0 1 20 403.1575 cm
Q
q
1 0 0 1 20 361.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (bsps) Tj /F1 10 Tf ( can't be broadcasted to a fitting shape) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (bsps) Tj /F1 10 Tf ( is not of dimension 2) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (bsps) Tj /F1 10 Tf ( is an empty array) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 361.1575 cm
Q
q
1 0 0 1 20 345.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 332.1575 Tm  T* ET
q
1 0 0 1 20 330.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 324.1575 cm
Q
q
1 0 0 1 20 306.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._res_wind_speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 306.1575 cm
Q
q
1 0 0 1 20 288.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 282.1575 cm
Q
q
1 0 0 1 20 264.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._res_wind_angle) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 264.1575 cm
Q
q
1 0 0 1 20 246.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 240.1575 cm
Q
q
1 0 0 1 20 222.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._bsps) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 222.1575 cm
Q
q
1 0 0 1 20 204.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path,) Tj ( ) Tj (fmt='hro') Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 198.1575 cm
Q
q
1 0 0 1 20 68.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 124 cm
Q
q
1 0 0 1 20 112 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a .csv file with delimiter ',' and the following format:) Tj T* ET
Q
Q
q
1 0 0 1 20 112 cm
Q
q
1 0 0 1 20 106 cm
Q
q
1 0 0 1 20 16 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramTable) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind speed resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Wind angle resolution:) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Boat speeds:) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.boat_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 16 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
81 0 obj
<<
/Length 8111
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 562.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 80 Tm  T* ET
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 42 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (fmt) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the format of the created csv) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileWritingException) Tj /F1 10 Tf ( if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 562.1575 cm
Q
q
1 0 0 1 20 544.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetrize) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 538.1575 cm
Q
q
1 0 0 1 20 489.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 43 cm
Q
q
1 0 0 1 20 31 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 31 cm
Q
q
1 0 0 1 20 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagramTable) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 489.1575 cm
Q
q
1 0 0 1 20 471.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (change_entries) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (new_bsps,) Tj ( ) Tj (ws=None,) Tj ( ) Tj (wa=None) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 465.1575 cm
Q
q
1 0 0 1 20 116.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 343 cm
Q
q
1 0 0 1 20 331 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Changes specified entries in the table) Tj T* ET
Q
Q
q
1 0 0 1 20 331 cm
Q
q
1 0 0 1 20 315 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 224 Tm  T* ET
q
1 0 0 1 20 222 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_bsps) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj T* ET
Q
Q
q
1 0 0 1 20 216 cm
Q
q
1 0 0 1 20 168 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Sequence containing the new boat speeds to be) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (inserted in the specified entries) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Should be of a matching shape) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 150 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 84 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Element\(s\) of ) Tj /F2 10 Tf (self.wind_speeds) Tj /F1 10 Tf (, specifying) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the columns, where new boat speeds will be inserted) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (wa) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, or ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Element\(s\) of ) Tj /F2 10 Tf (self.wind_angles) Tj /F1 10 Tf (, specifiying) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the rows, where new boat speeds will be inserted) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed it will default to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises a PolarDiagramException) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is not contained in ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( is not contained in ) Tj /F2 10 Tf (self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (new_bsps) Tj /F1 10 Tf ( can't be broadcasted to a fitting shape) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- if ) Tj /F2 10 Tf (new_bsps) Tj /F1 10 Tf ( is an empty sequence) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 116.1575 cm
Q
q
1 0 0 1 20 98.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_polar) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 80.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 74.15748 cm
Q
q
1 0 0 1 20 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 71.15748 cm
Q
q
1 0 0 1 20 59.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of one or more slices of the) Tj T* ET
Q
Q
q
1 0 0 1 20 47.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 47.15748 cm
Q
q
1 0 0 1 20 31.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 18.15748 Tm  T* ET
q
1 0 0 1 20 16.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 10.15748 cm
Q
q
1 0 0 1 20 -1.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
82 0 obj
<<
/Length 7651
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 553.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram table, given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 48 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- an Iterable containing only elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- a single element of ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The slices are then equal to the corresponding) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (columns of the table together with self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing it passed, it will default to self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 553.1575 cm
Q
q
1 0 0 1 20 535.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 529.1575 cm
Q
q
1 0 0 1 20 481.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 481.1575 cm
Q
q
1 0 0 1 20 463.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 457.1575 cm
Q
q
1 0 0 1 20 199.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 199.1575 cm
Q
q
1 0 0 1 20 181.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 175.1575 cm
Q
q
1 0 0 1 20 31.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 31.15748 cm
Q
q
1 0 0 1 20 13.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 7.15748 cm
Q
q
1 0 0 1 20 -10.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
83 0 obj
<<
/Length 7998
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 502.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 128 Tm  T* ET
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if at least one element of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( is not in ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 502.1575 cm
Q
q
1 0 0 1 20 484.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_flat) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 466.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 460.1575 cm
Q
q
1 0 0 1 20 9 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 445.1575 cm
Q
q
1 0 0 1 20 433.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of one or more slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 433.1575 cm
Q
q
1 0 0 1 20 417.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 404.1575 Tm  T* ET
q
1 0 0 1 20 402.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 396.1575 cm
Q
q
1 0 0 1 20 282.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram table, given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 48 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- an Iterable containing only elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- a single element of ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The slices are then equal to the corresponding) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (columns of the table together with self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing it passed, it will default to self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 282.1575 cm
Q
q
1 0 0 1 20 264.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 258.1575 cm
Q
q
1 0 0 1 20 210.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 210.1575 cm
Q
q
1 0 0 1 20 192.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 186.1575 cm
Q
q
1 0 0 1 20 -15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 168 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
84 0 obj
<<
/Length 7902
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 660 Tm  T* ET
q
1 0 0 1 20 247 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 380 Tm  T* ET
q
1 0 0 1 20 348 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 330 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324 cm
Q
q
1 0 0 1 20 180 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if at least one element of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( is not in ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 247 cm
Q
q
1 0 0 1 20 229 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (colors=\('blue',) Tj ( ) Tj ('blue'\)) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 223 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 217 cm
Q
q
1 0 0 1 20 205 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 3d plot of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 205 cm
Q
q
1 0 0 1 20 189 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 176 Tm  T* ET
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf (: ) Tj /F2 10 Tf (mpl_toolkits.mplot3d.axes3d.Axes3D) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 120 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If no color gradient is desired, set both elements) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (to the same color) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('blue',) Tj ( ) Tj ('blue'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
85 0 obj
<<
/Length 7169
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 661.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 643.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (*legend_) Tj (kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 637.1575 cm
Q
q
1 0 0 1 20 186.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 445 cm
Q
q
1 0 0 1 20 433 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 'wind speed vs. wind angle' color gradient plot of the) Tj T* ET
Q
Q
q
1 0 0 1 20 421 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram with respect to the respective boat speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 421 cm
Q
q
1 0 0 1 20 405 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 392 Tm  T* ET
q
1 0 0 1 20 390 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 384 cm
Q
q
1 0 0 1 20 336 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 336 cm
Q
q
1 0 0 1 20 318 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 246 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyleor) Tj /F1 10 Tf ( equivalent, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 186 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Markerstyle for the created scatter plot) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, it will default to ) Tj /F2 10 Tf ("o") Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 84 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (object.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 186.1575 cm
Q
q
1 0 0 1 20 168.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramTable) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=None,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 150.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 144.1575 cm
Q
q
1 0 0 1 20 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 123.1575 cm
Q
q
1 0 0 1 20 111.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the \(seperate\) convex hull of one or more slices of the) Tj T* ET
Q
Q
q
1 0 0 1 20 99.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram and creates a polar plot of them) Tj T* ET
Q
Q
q
1 0 0 1 20 99.15748 cm
Q
q
1 0 0 1 20 83.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 70.15748 Tm  T* ET
q
1 0 0 1 20 68.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (Iterable) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 62.15748 cm
Q
q
1 0 0 1 20 38.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram table, given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
86 0 obj
<<
/Length 8065
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 601.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- an Iterable containing only elements of) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- a single element of ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The slices are then equal to the corresponding) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (columns of the table together with self.wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing it passed, it will default to self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 601.1575 cm
Q
q
1 0 0 1 20 583.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 577.1575 cm
Q
q
1 0 0 1 20 529.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 529.1575 cm
Q
q
1 0 0 1 20 511.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 505.1575 cm
Q
q
1 0 0 1 20 247.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 247.1575 cm
Q
q
1 0 0 1 20 229.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 223.1575 cm
Q
q
1 0 0 1 20 79.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 79.15748 cm
Q
q
1 0 0 1 20 61.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 55.15748 cm
Q
q
1 0 0 1 20 -16.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
87 0 obj
<<
/Length 8620
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 574.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 101 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 68 Tm  T* ET
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if at least one element of) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( is not in ) Tj /F2 10 Tf (self.wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 574.1575 cm
Q
q
1 0 0 1 20 556.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramCurve) Tj /F1 10 Tf (\() Tj /F2 10 Tf (f,) Tj ( ) Tj (params,) Tj ( ) Tj (radians=False) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 550.1575 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 544.1575 cm
Q
q
1 0 0 1 20 532.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar diagram given by a) Tj T* ET
Q
Q
q
1 0 0 1 20 520.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (fitted curve/surface) Tj T* ET
Q
Q
q
1 0 0 1 20 520.1575 cm
Q
q
1 0 0 1 20 504.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 291.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 200 Tm  T* ET
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (f) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (function) Tj T* ET
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 102 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Curve/surface that describes the polar diagram, given as) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (a function, with the signature ) Tj /F2 10 Tf (f\(x,) Tj ( ) Tj (*params\)) Tj ( ) Tj (-) Tj (>) Tj ( ) Tj (y) Tj /F1 10 Tf (,) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (where ) Tj /F2 10 Tf (x) Tj /F1 10 Tf ( is a ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape ) Tj /F2 10 Tf (\(n,) Tj ( ) Tj (2\)) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which corresponds to pairs of wind speed and wind angle) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (and ) Tj /F2 10 Tf (y) Tj /F1 10 Tf ( is a ) Tj /F2 10 Tf (numpy.ndarray) Tj /F1 10 Tf ( of shape ) Tj /F2 10 Tf (\(n,) Tj ( ) Tj (\)) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (\(n,) Tj ( ) Tj (1\)) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which corresponds to the boat speed at the resp.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind speed and wind angle.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 84 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (params) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( or sequence) Tj T* ET
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Optimal parameters for ) Tj /F2 10 Tf (f) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (radians) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if f takes the wind angles to be in radians or degrees) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 275.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 262.1575 Tm  T* ET
q
1 0 0 1 20 260.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (curve) Tj T* ET
Q
Q
q
1 0 0 1 20 254.1575 cm
Q
q
1 0 0 1 20 236.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._f) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 236.1575 cm
Q
q
1 0 0 1 20 218.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (radians) Tj T* ET
Q
Q
q
1 0 0 1 20 212.1575 cm
Q
q
1 0 0 1 20 194.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 194.1575 cm
Q
q
1 0 0 1 20 176.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 170.1575 cm
Q
q
1 0 0 1 20 152.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._params) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 152.1575 cm
Q
q
1 0 0 1 20 134.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 128.1575 cm
Q
q
1 0 0 1 20 -16.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 139 cm
Q
q
1 0 0 1 20 127 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a .csv file with delimiter ':' and the following format:) Tj T* ET
Q
Q
q
1 0 0 1 20 127 cm
Q
q
1 0 0 1 20 121 cm
Q
q
1 0 0 1 20 67 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramCurve) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Function: ) Tj /F2 10 Tf (self.curve.__name__) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Radians: ) Tj /F2 10 Tf (self.radians) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Parameters: ) Tj /F2 10 Tf (self.parameters) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 67 cm
Q
q
1 0 0 1 20 51 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
88 0 obj
<<
/Length 5399
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 661.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileWritingException) Tj /F1 10 Tf ( if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 661.1575 cm
Q
q
1 0 0 1 20 643.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetrize) Tj /F1 10 Tf ( \() Tj /F2 10 Tf (self) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 637.1575 cm
Q
q
1 0 0 1 20 588.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 43 cm
Q
q
1 0 0 1 20 31 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 31 cm
Q
q
1 0 0 1 20 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagramCurve) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 588.1575 cm
Q
q
1 0 0 1 20 570.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_polar) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 552.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 546.1575 cm
Q
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 307 cm
Q
q
1 0 0 1 20 295 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of one or more slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 295 cm
Q
q
1 0 0 1 20 279 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 266 Tm  T* ET
q
1 0 0 1 20 264 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 258 cm
Q
q
1 0 0 1 20 96 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 144 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 60 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a tuple of three values, which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (interpreted as a start and end point of an) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (interval aswell as a number of slices, which) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be evenly spaced in the given interval) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a list of specific wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then equal ) Tj /F2 10 Tf (self\(w,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf ( where ) Tj /F2 10 Tf (w) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (takes the given values in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( goes through) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a fixed number of angles between 0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 78 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 24 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
89 0 obj
<<
/Length 8137
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 106.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 554 Tm  T* ET
q
1 0 0 1 20 348 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 330 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324 cm
Q
q
1 0 0 1 20 180 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 106.1575 cm
Q
q
1 0 0 1 20 88.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (flat_plot) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 70.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 64.15748 cm
Q
q
1 0 0 1 20 9 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 49 cm
Q
q
1 0 0 1 20 37 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of one or multiple slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 37 cm
Q
q
1 0 0 1 20 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 8 Tm  T* ET
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
90 0 obj
<<
/Length 8094
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 541.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 144 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 60 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a tuple of three values, which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (interpreted as a start and end point of an) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (interval aswell as a number of slices, which) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be evenly spaced in the given interval) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a list of specific wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then equal ) Tj /F2 10 Tf (self\(w,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf ( where ) Tj /F2 10 Tf (w) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (takes the given values in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( goes through) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a fixed number of angles between 0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 541.1575 cm
Q
q
1 0 0 1 20 523.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 517.1575 cm
Q
q
1 0 0 1 20 469.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 469.1575 cm
Q
q
1 0 0 1 20 451.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 445.1575 cm
Q
q
1 0 0 1 20 187.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 187.1575 cm
Q
q
1 0 0 1 20 169.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 163.1575 cm
Q
q
1 0 0 1 20 19.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 19.15748 cm
Q
q
1 0 0 1 20 1.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 -4.84252 cm
Q
q
1 0 0 1 20 -16.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
91 0 obj
<<
/Length 7654
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 34.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 520.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 140 Tm  T* ET
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 520.1575 cm
Q
q
1 0 0 1 20 502.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (100\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 484.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('blue',) Tj ( ) Tj ('blue'\)) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 478.1575 cm
Q
q
1 0 0 1 20 105.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 367 cm
Q
q
1 0 0 1 20 355 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 3d plot of a part of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 355 cm
Q
q
1 0 0 1 20 339 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 326 Tm  T* ET
q
1 0 0 1 20 324 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 318 cm
Q
q
1 0 0 1 20 192 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A region of the polar diagram given as a tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of three values, which will be interpreted as) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a start and an end point of an interval aswell as) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a number of slices, which will be evenly spaced) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the given interval) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then equal ) Tj /F2 10 Tf (self\(w,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf ( where w) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (takes the given values in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( goes) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through a fixed number of angles between 0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 100\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 174 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf (: ) Tj /F2 10 Tf (mpl_toolkits.mplot3d.axes3d.Axes3D) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 168 cm
Q
q
1 0 0 1 20 120 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 102 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 78 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with which) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If no color gradient is desired, set both elements) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (to the same color) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('blue', 'blue'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 105.1575 cm
Q
q
1 0 0 1 20 87.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (100\),) Tj T* ET
Q
Q
q
1 0 0 1 20 69.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (**legend_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 63.15748 cm
Q
q
1 0 0 1 20 17.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 40 cm
Q
q
1 0 0 1 20 28 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 'wind speed vs. wind angle' color gradient plot of a part) Tj T* ET
Q
Q
q
1 0 0 1 20 16 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of the polar diagram with respect to the respective boat speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 16 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
92 0 obj
<<
/Length 7653
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 118.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 542 Tm  T* ET
q
1 0 0 1 20 540 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws_range) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 534 cm
Q
q
1 0 0 1 20 408 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A region of the polar diagram given as a tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (of three values, which will be interpreted as) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a start and an end point of an interval aswell as) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a number of slices, which will be evenly spaced) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (in the given interval) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then equal ) Tj /F2 10 Tf (self\(w,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf ( where w) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (takes the given values in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( goes) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (through a fixed number of angles between 0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 100\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 408 cm
Q
q
1 0 0 1 20 390 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optinal) Tj T* ET
Q
Q
q
1 0 0 1 20 384 cm
Q
q
1 0 0 1 20 336 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 336 cm
Q
q
1 0 0 1 20 318 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 246 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (which the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyleor) Tj /F1 10 Tf ( equivalent, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 186 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Markerstyle for the created scatter plot) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, it will default to ) Tj /F2 10 Tf ("o") Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 84 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (object.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 118.1575 cm
Q
q
1 0 0 1 20 100.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramCurve) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_convex_hull) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (20,) Tj ( ) Tj (5\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 82.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 76.15748 cm
Q
q
1 0 0 1 20 9 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 61 cm
Q
q
1 0 0 1 20 49 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the \(seperate\) convex hull of one or more slices of the) Tj T* ET
Q
Q
q
1 0 0 1 20 37 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram and creates a polar plot of them) Tj T* ET
Q
Q
q
1 0 0 1 20 37 cm
Q
q
1 0 0 1 20 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 8 Tm  T* ET
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 3, ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
93 0 obj
<<
/Length 8112
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 541.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 144 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 144 cm
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 60 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a tuple of three values, which will be) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (interpreted as a start and end point of an) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (interval aswell as a number of slices, which) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (will be evenly spaces in the given interval) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a list of specific wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then equal ) Tj /F2 10 Tf (self\(w,) Tj ( ) Tj (wa\)) Tj /F1 10 Tf ( where ) Tj /F2 10 Tf (w) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (takes the given values in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( and ) Tj /F2 10 Tf (wa) Tj /F1 10 Tf ( goes through) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a fixed number of angles between 0\260 and 360\260) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \(0, 20, 5\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 541.1575 cm
Q
q
1 0 0 1 20 523.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 517.1575 cm
Q
q
1 0 0 1 20 469.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 469.1575 cm
Q
q
1 0 0 1 20 451.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 445.1575 cm
Q
q
1 0 0 1 20 187.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 187.1575 cm
Q
q
1 0 0 1 20 169.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 163.1575 cm
Q
q
1 0 0 1 20 19.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 19.15748 cm
Q
q
1 0 0 1 20 1.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 -4.84252 cm
Q
q
1 0 0 1 20 -16.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
94 0 obj
<<
/Length 6628
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 532.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 143 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 140 Tm  T* ET
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 532.1575 cm
Q
q
1 0 0 1 20 514.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (polar_diagram) Tj /F1 10 Tf (.) Tj /F3 10 Tf (PolarDiagramPointcloud) Tj /F1 10 Tf (\() Tj /F2 10 Tf (pts=None,) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 508.1575 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 368 cm
Q
q
1 0 0 1 20 356 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (A class to represent, visualize and work with a polar diagram given by a point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 356 cm
Q
q
1 0 0 1 20 340 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 181 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 146 Tm  T* ET
q
1 0 0 1 20 144 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (pts) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 78 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Initial points of the point cloud, given as a sequence of points) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (consisting of wind speed, wind angle and boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, point cloud will be initialized) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as an empty point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if the given wind data should be viewed as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (False) Tj /F1 10 Tf (, wind data will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 175 cm
Q
q
1 0 0 1 20 163 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if ) Tj /F2 10 Tf (pts) Tj /F1 10 Tf ( can't be broadcasted to shape ) Tj /F2 10 Tf (\(n,) Tj ( ) Tj (3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 163 cm
Q
q
1 0 0 1 20 147 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Methods :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 134 Tm  T* ET
q
1 0 0 1 20 132 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 108 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all the different wind speeds in the point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 90 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (wind_angles) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Returns a list of all the different wind angles in the point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (points) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 24 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Returns a read only version of ) Tj /F2 10 Tf (self._pts) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (to_csv) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (csv_path) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
95 0 obj
<<
/Length 6950
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 58.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 552.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 145 cm
Q
q
1 0 0 1 20 133 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a .csv file with delimiter ',' and the following format) Tj T* ET
Q
Q
q
1 0 0 1 20 133 cm
Q
q
1 0 0 1 20 127 cm
Q
q
1 0 0 1 20 85 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (PolarDiagramPointcloud) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (True wind speed ,True wind angle ,Boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 85 cm
Q
q
1 0 0 1 20 69 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 38 Tm  T* ET
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (csv_path) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (string) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Path where a .csv file is located or where a new) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (.csv file will be created) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (FileWritingException) Tj /F1 10 Tf ( if the file can't be written to) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 552.1575 cm
Q
q
1 0 0 1 20 534.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (symmetrize) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 528.1575 cm
Q
q
1 0 0 1 20 479.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 43 cm
Q
q
1 0 0 1 20 31 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 20 31 cm
Q
q
1 0 0 1 20 15 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Returns :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (out) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (polardiagram.PolarDiagramPointcloud) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 479.1575 cm
Q
q
1 0 0 1 20 461.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (add_points) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (new_pts,) Tj ( ) Tj (tw=True) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 455.1575 cm
Q
q
1 0 0 1 20 214.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 235 cm
Q
q
1 0 0 1 20 223 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Adds additional points to the point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 223 cm
Q
q
1 0 0 1 20 207 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 140 Tm  T* ET
q
1 0 0 1 20 138 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_points) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (array_like) Tj T* ET
Q
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 90 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (New points to be added to the point cloud given as) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a sequence of points consisting of wind speed,) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (wind angle and boat speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 72 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (tw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies if the given wind data should be viewed) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (as true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If ) Tj /F2 10 Tf (False) Tj /F1 10 Tf (, wind data will be converted to true wind) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_pts) Tj /F1 10 Tf ( can't be broadcasted to shape ) Tj /F2 10 Tf (\(n,) Tj ( ) Tj (3\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (new_pts) Tj /F1 10 Tf ( is an empty array) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 214.1575 cm
Q
q
1 0 0 1 20 196.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_polar) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (numpy.inf\),) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 178.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=None,) Tj ( ) Tj (**plo) Tj (t_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 172.1575 cm
Q
q
1 0 0 1 20 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 49 cm
Q
q
1 0 0 1 20 37 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a polar plot of one or more slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 37 cm
Q
q
1 0 0 1 20 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 8 Tm  T* ET
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
96 0 obj
<<
/Length 8047
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 577.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 48 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a tuple of two values which represent a lower) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and upper bound of considered wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a list of specific wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then consist of all the rows in ) Tj /F2 10 Tf (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (whose first entry is equal to the values in ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\(0,) Tj ( ) Tj (numpy.inf\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 577.1575 cm
Q
q
1 0 0 1 20 559.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 553.1575 cm
Q
q
1 0 0 1 20 505.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 505.1575 cm
Q
q
1 0 0 1 20 487.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 481.1575 cm
Q
q
1 0 0 1 20 223.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 223.1575 cm
Q
q
1 0 0 1 20 205.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 199.1575 cm
Q
q
1 0 0 1 20 55.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 55.15748 cm
Q
q
1 0 0 1 20 37.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 31.15748 cm
Q
q
1 0 0 1 20 -10.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
97 0 obj
<<
/Length 8176
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 31.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 514.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 104 Tm  T* ET
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is given as a single value) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or a list and there is a value ) Tj /F2 10 Tf (w) Tj /F1 10 Tf ( in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf (, such that there are no) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (rows in ) Tj /F2 10 Tf (self.points) Tj /F1 10 Tf ( whose first entry is equal to ) Tj /F2 10 Tf (w) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 514.1575 cm
Q
q
1 0 0 1 20 496.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_flat) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 478.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=No) Tj (ne,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 472.1575 cm
Q
q
1 0 0 1 20 9 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 457.1575 cm
Q
q
1 0 0 1 20 445.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a cartesian plot of one or more slices of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 445.1575 cm
Q
q
1 0 0 1 20 429.1575 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 416.1575 Tm  T* ET
q
1 0 0 1 20 414.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 408.1575 cm
Q
q
1 0 0 1 20 282.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 48 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a tuple of two values which represent a lower) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and upper bound of considered wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a list of specific wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then consist of all the rows in ) Tj /F2 10 Tf (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (whose first entry is equal to the values in ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\(0,) Tj ( ) Tj (numpy.inf\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 282.1575 cm
Q
q
1 0 0 1 20 264.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 258.1575 cm
Q
q
1 0 0 1 20 210.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 210.1575 cm
Q
q
1 0 0 1 20 192.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 186.1575 cm
Q
q
1 0 0 1 20 -15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 210 cm
Q
q
1 0 0 1 20 198 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 168 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 132 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 102 cm
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 6 cm
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
98 0 obj
<<
/Length 7824
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 648 Tm  T* ET
q
1 0 0 1 20 223 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 380 Tm  T* ET
q
1 0 0 1 20 348 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 348 cm
Q
q
1 0 0 1 20 330 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 324 cm
Q
q
1 0 0 1 20 180 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 162 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 156 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 72 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is given as a single value) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or a list and there is a value ) Tj /F2 10 Tf (w) Tj /F1 10 Tf ( in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf (, such that there are no) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (rows in ) Tj /F2 10 Tf (self.points) Tj /F1 10 Tf ( whose first entry is equal to ) Tj /F2 10 Tf (w) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 223 cm
Q
q
1 0 0 1 20 205 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (. ) Tj /F3 10 Tf (plot_3d) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 199 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 193 cm
Q
q
1 0 0 1 20 181 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 3d plot of the polar diagram) Tj T* ET
Q
Q
q
1 0 0 1 20 181 cm
Q
q
1 0 0 1 20 165 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 122 Tm  T* ET
q
1 0 0 1 20 120 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (mpl_toolkits.mplot3d.axes3d.Axes3D) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises a PolarDiagramException if there are no points in the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
99 0 obj
<<
/Length 7597
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 31.9728 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 661.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F1 10 Tf (.) Tj /F3 10 Tf (plot_color_gradient) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ax=None,) Tj T* ET
Q
Q
q
1 0 0 1 20 643.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (marker=None,) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (**legend) Tj (_kw) Tj /F1 10 Tf (\):) Tj T* ET
Q
Q
q
1 0 0 1 20 637.1575 cm
Q
q
1 0 0 1 20 156.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 475 cm
Q
q
1 0 0 1 20 463 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Creates a 'wind speed vs. wind angle' color gradient plot of the) Tj T* ET
Q
Q
q
1 0 0 1 20 451 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram with respect to the respective boat speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 451 cm
Q
q
1 0 0 1 20 435 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 392 Tm  T* ET
q
1 0 0 1 20 390 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.axes.Axes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 384 cm
Q
q
1 0 0 1 20 336 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 336 cm
Q
q
1 0 0 1 20 318 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 312 cm
Q
q
1 0 0 1 20 246 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Colors which specify the color gradient with which) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the polar diagram will be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Accepts all colors and representations as given in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Defaults to \('green', 'red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 246 cm
Q
q
1 0 0 1 20 228 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (marker) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.markers.Markerstyleor) Tj /F1 10 Tf ( equivalent, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 186 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Markerstyle for the created scatter plot) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If nothing is passed, it will default to ) Tj /F2 10 Tf ("o") Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 186 cm
Q
q
1 0 0 1 20 168 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 162 cm
Q
q
1 0 0 1 20 84 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 72 cm
Q
q
1 0 0 1 20 60 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Legend will be a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (object.) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 66 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 60 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 54 cm
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Raises a PolarDiagramException if there are no points in the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (point cloud) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 156.1575 cm
Q
q
1 0 0 1 20 138.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (PolarDiagramPointcloud) Tj /F3 10 Tf (plot_convex_hull) Tj /F1 10 Tf (\() Tj /F2 10 Tf (self,) Tj ( ) Tj (ws=\(0,) Tj ( ) Tj (numpy.inf\),) Tj T* ET
Q
Q
q
1 0 0 1 20 120.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax=None,) Tj ( ) Tj (colors=\('green',) Tj ( ) Tj ('red'\),) Tj ( ) Tj (show_legend=False,) Tj ( ) Tj (legend_kw=No) Tj (ne,) Tj ( ) Tj (**plot_kw) Tj /F1 10 Tf (\)) Tj T* ET
Q
Q
q
1 0 0 1 20 114.1575 cm
Q
q
1 0 0 1 20 15 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 93.15748 cm
Q
q
1 0 0 1 20 81.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Computes the \(seperate\) convex hull of one or more slices of the) Tj T* ET
Q
Q
q
1 0 0 1 20 69.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (polar diagram and creates a polar plot of them) Tj T* ET
Q
Q
q
1 0 0 1 20 69.15748 cm
Q
q
1 0 0 1 20 53.15748 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F3 10 Tf 12 TL (Parameters :) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 40.15748 Tm  T* ET
q
1 0 0 1 20 38.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ws) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf ( of length 2, ) Tj /F2 10 Tf (list) Tj /F1 10 Tf (, ) Tj /F2 10 Tf (int) Tj /F1 10 Tf ( or ) Tj /F2 10 Tf (float) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 32.15748 cm
Q
q
1 0 0 1 20 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Slices of the polar diagram given as either) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
100 0 obj
<<
/Length 7700
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 76.86614 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 663.1575 Tm  T* ET
q
1 0 0 1 20 3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 651.1575 Tm  T* ET
q
1 0 0 1 20 565.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a tuple of two values which represent a lower) Tj T* ET
Q
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (and upper bound of considered wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a list of specific wind speeds) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- a single wind speed) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Slices will then consist of all the rows in ) Tj /F2 10 Tf (self.points) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (whose first entry is equal to the values in ) Tj /F2 10 Tf (ws) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\(0,) Tj ( ) Tj (numpy.inf\)) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 565.1575 cm
Q
q
1 0 0 1 20 547.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (ax) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (matplotlib.projections.polar.PolarAxes) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 541.1575 cm
Q
q
1 0 0 1 20 493.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 30 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Axes instance where the plot will be created.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (If nothing is passed, the function will create) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (a suitable axes) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 493.1575 cm
Q
q
1 0 0 1 20 475.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (colors) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (tuple) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 469.1575 cm
Q
q
1 0 0 1 20 211.1575 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 252 cm
Q
q
1 0 0 1 20 240 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies the colors to be used for the different) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (slices) Tj T* ET
Q
Q
q
1 0 0 1 20 228 cm
Q
q
1 0 0 1 20 222 cm
Q
q
1 0 0 1 20 210 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Accepts all colors and representations as given) Tj T* ET
Q
Q
q
1 0 0 1 20 198 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in ) Tj 0 0 .501961 rg (colors) Tj 0 0 0 rg ( and ) Tj 0 0 .501961 rg (repr) Tj  T* ET
Q
Q
q
1 0 0 1 20 198 cm
Q
q
1 0 0 1 20 192 cm
Q
q
1 0 0 1 20 180 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four options for the tuple) Tj T* ET
Q
Q
q
1 0 0 1 20 180 cm
Q
q
1 0 0 1 20 174 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 150 cm
Q
q
1 0 0 1 20 138 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If as many or more colors as slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (each slice will be plotted in the specified color) Tj T* ET
Q
Q
q
1 0 0 1 20 126 cm
Q
q
1 0 0 1 20 120 cm
Q
q
1 0 0 1 20 108 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If exactly 2 colors are passed, the slices will) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (be plotted with a color gradient consiting of the) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (two colors) Tj T* ET
Q
Q
q
1 0 0 1 20 84 cm
Q
q
1 0 0 1 20 78 cm
Q
q
1 0 0 1 20 66 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If more than 2 colors but less than slices are passed,) Tj T* ET
Q
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (the first n_color slices will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (specified colors, and the rest will be plotted in the) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (default color ) Tj /F2 10 Tf ("blue") Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Alternatively one can specify certain slices to be plotted) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (in a certain color by passing a tuple of ) Tj /F2 10 Tf (\(ws,) Tj ( ) Tj (color\)) Tj /F1 10 Tf ( pairs) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Defaults to ) Tj /F2 10 Tf (\('green',) Tj ( ) Tj ('red'\)) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 211.1575 cm
Q
q
1 0 0 1 20 193.1575 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (show_legend) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (bool) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 187.1575 cm
Q
q
1 0 0 1 20 43.15748 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 138 cm
Q
q
1 0 0 1 20 126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Specifies wether or not a legend will be shown) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (next to the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 114 cm
Q
q
1 0 0 1 20 108 cm
Q
q
1 0 0 1 20 96 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The type of legend depends on the color options) Tj T* ET
Q
Q
q
1 0 0 1 20 96 cm
Q
q
1 0 0 1 20 90 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (- If the slices are plotted with a) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (color gradient, a ) Tj /F2 10 Tf (matplotlib.colorbar.Colorbar) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (object will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (- Otherwise a ) Tj /F2 10 Tf (matplotlib.legend.Legend) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (will be created and assigned to ) Tj /F2 10 Tf (ax) Tj /F1 10 Tf (.) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Default to ) Tj /F2 10 Tf (False) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 43.15748 cm
Q
q
1 0 0 1 20 25.15748 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (legend_kw) Tj /F1 10 Tf ( : ) Tj /F2 10 Tf (dict) Tj /F1 10 Tf (, optional) Tj T* ET
Q
Q
q
1 0 0 1 20 19.15748 cm
Q
q
1 0 0 1 20 -10.84252 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 24 cm
Q
q
1 0 0 1 20 12 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments to be passed to either the) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.colorbar.Colorbar) Tj /F1 10 Tf ( class or the) Tj T* ET
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
q
Q
Q
 
endstream
endobj
101 0 obj
<<
/Length 2554
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 591.0236 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 161 Tm  T* ET
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 42 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 116 Tm  T* ET
q
1 0 0 1 20 66 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.legend.Legend) Tj /F1 10 Tf ( class to change) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (position and appearence of the legend) Tj T* ET
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Will only be used if ) Tj /F2 10 Tf (show_legend=True) Tj T* ET
Q
Q
q
1 0 0 1 20 18 cm
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (If noting is passed, it will default to ) Tj /F2 10 Tf ({}) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 66 cm
Q
q
1 0 0 1 20 48 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (plot_kw) Tj /F1 10 Tf ( : Keyword arguments) Tj T* ET
Q
Q
q
1 0 0 1 20 42 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 2 Tm  T* ET
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Keyword arguments that will be passed to the) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (matplotlib.axes.Axes.plot) Tj /F1 10 Tf ( function, to change) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (certain appearences of the plot) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 36 cm
Q
q
1 0 0 1 20 24 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Raises a ) Tj /F2 10 Tf (PolarDiagramException) Tj /F1 10 Tf ( if ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf ( is given as a single value) Tj T* ET
Q
Q
q
1 0 0 1 20 12 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (or a list and there is a value ) Tj /F2 10 Tf (w) Tj /F1 10 Tf ( in ) Tj /F2 10 Tf (ws) Tj /F1 10 Tf (, such that there are no) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (rows in ) Tj /F2 10 Tf (self.points) Tj /F1 10 Tf ( whose first entry is equal to ) Tj /F2 10 Tf (w) Tj T* ET
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
1 0 0 1 62.69291 591.0236 cm
Q
 
endstream
endobj
102 0 obj
<<
/Nums [ 0 103 0 R 1 104 0 R 2 105 0 R 3 106 0 R 4 107 0 R 
  5 108 0 R 6 109 0 R 7 110 0 R 8 111 0 R 9 112 0 R 
  10 113 0 R 11 114 0 R 12 115 0 R 13 116 0 R 14 117 0 R 
  15 118 0 R 16 119 0 R 17 120 0 R 18 121 0 R 19 122 0 R 
  20 123 0 R 21 124 0 R 22 125 0 R 23 126 0 R 24 127 0 R 
  25 128 0 R 26 129 0 R 27 130 0 R ]
>>
endobj
103 0 obj
<<
/S /D /St 1
>>
endobj
104 0 obj
<<
/S /D /St 2
>>
endobj
105 0 obj
<<
/S /D /St 3
>>
endobj
106 0 obj
<<
/S /D /St 4
>>
endobj
107 0 obj
<<
/S /D /St 5
>>
endobj
108 0 obj
<<
/S /D /St 6
>>
endobj
109 0 obj
<<
/S /D /St 7
>>
endobj
110 0 obj
<<
/S /D /St 8
>>
endobj
111 0 obj
<<
/S /D /St 9
>>
endobj
112 0 obj
<<
/S /D /St 10
>>
endobj
113 0 obj
<<
/S /D /St 11
>>
endobj
114 0 obj
<<
/S /D /St 12
>>
endobj
115 0 obj
<<
/S /D /St 13
>>
endobj
116 0 obj
<<
/S /D /St 14
>>
endobj
117 0 obj
<<
/S /D /St 15
>>
endobj
118 0 obj
<<
/S /D /St 16
>>
endobj
119 0 obj
<<
/S /D /St 17
>>
endobj
120 0 obj
<<
/S /D /St 18
>>
endobj
121 0 obj
<<
/S /D /St 19
>>
endobj
122 0 obj
<<
/S /D /St 20
>>
endobj
123 0 obj
<<
/S /D /St 21
>>
endobj
124 0 obj
<<
/S /D /St 22
>>
endobj
125 0 obj
<<
/S /D /St 23
>>
endobj
126 0 obj
<<
/S /D /St 24
>>
endobj
127 0 obj
<<
/S /D /St 25
>>
endobj
128 0 obj
<<
/S /D /St 26
>>
endobj
129 0 obj
<<
/S /D /St 27
>>
endobj
130 0 obj
<<
/S /D /St 28
>>
endobj
xref
0 131
0000000000 65535 f 
0000000073 00000 n 
0000000124 00000 n 
0000000231 00000 n 
0000000336 00000 n 
0000000448 00000 n 
0000000618 00000 n 
0000000793 00000 n 
0000000978 00000 n 
0000001152 00000 n 
0000001393 00000 n 
0000001585 00000 n 
0000001784 00000 n 
0000002016 00000 n 
0000002222 00000 n 
0000002428 00000 n 
0000002634 00000 n 
0000002840 00000 n 
0000003046 00000 n 
0000003252 00000 n 
0000003466 00000 n 
0000003677 00000 n 
0000003909 00000 n 
0000004123 00000 n 
0000004334 00000 n 
0000004566 00000 n 
0000004780 00000 n 
0000004991 00000 n 
0000005223 00000 n 
0000005437 00000 n 
0000005648 00000 n 
0000005880 00000 n 
0000006094 00000 n 
0000006305 00000 n 
0000006537 00000 n 
0000006743 00000 n 
0000006949 00000 n 
0000007163 00000 n 
0000007374 00000 n 
0000007606 00000 n 
0000007820 00000 n 
0000008031 00000 n 
0000008263 00000 n 
0000008477 00000 n 
0000008688 00000 n 
0000008920 00000 n 
0000009134 00000 n 
0000009345 00000 n 
0000009577 00000 n 
0000009791 00000 n 
0000010002 00000 n 
0000010234 00000 n 
0000010440 00000 n 
0000010646 00000 n 
0000010860 00000 n 
0000011071 00000 n 
0000011303 00000 n 
0000011517 00000 n 
0000011728 00000 n 
0000011960 00000 n 
0000012166 00000 n 
0000012380 00000 n 
0000012591 00000 n 
0000012823 00000 n 
0000013037 00000 n 
0000013248 00000 n 
0000013481 00000 n 
0000013688 00000 n 
0000013795 00000 n 
0000014084 00000 n 
0000014158 00000 n 
0000014271 00000 n 
0000014407 00000 n 
0000014531 00000 n 
0000014787 00000 n 
0000022491 00000 n 
0000031149 00000 n 
0000039200 00000 n 
0000047349 00000 n 
0000055306 00000 n 
0000063947 00000 n 
0000071215 00000 n 
0000079378 00000 n 
0000087081 00000 n 
0000095131 00000 n 
0000103085 00000 n 
0000110306 00000 n 
0000118423 00000 n 
0000127095 00000 n 
0000132546 00000 n 
0000140735 00000 n 
0000148881 00000 n 
0000156587 00000 n 
0000164292 00000 n 
0000172456 00000 n 
0000179136 00000 n 
0000186138 00000 n 
0000194237 00000 n 
0000202465 00000 n 
0000210341 00000 n 
0000217990 00000 n 
0000225743 00000 n 
0000228350 00000 n 
0000228696 00000 n 
0000228731 00000 n 
0000228766 00000 n 
0000228801 00000 n 
0000228836 00000 n 
0000228871 00000 n 
0000228906 00000 n 
0000228941 00000 n 
0000228976 00000 n 
0000229011 00000 n 
0000229047 00000 n 
0000229083 00000 n 
0000229119 00000 n 
0000229155 00000 n 
0000229191 00000 n 
0000229227 00000 n 
0000229263 00000 n 
0000229299 00000 n 
0000229335 00000 n 
0000229371 00000 n 
0000229407 00000 n 
0000229443 00000 n 
0000229479 00000 n 
0000229515 00000 n 
0000229551 00000 n 
0000229587 00000 n 
0000229623 00000 n 
0000229659 00000 n 
trailer
<<
/ID 
[<baf2d92e66e9716db1f1e327e5048352><baf2d92e66e9716db1f1e327e5048352>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 68 0 R
/Root 67 0 R
/Size 131
>>
startxref
229695
%%EOF
